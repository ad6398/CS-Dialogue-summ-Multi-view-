# -*- coding: utf-8 -*-
"""Read_Labels.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UfNdV7hggShnV4RCjhBVey5CkAMP04gu
"""

import pickle
import json

import re

def concat_conversation(data, labels, sep = ' | ', label_type = '_sent_c99_label'):
    conversations = []
    summaries = []
    for i in range(0, len(data)):
        if len(data[i]['dialogue'].split('\r\n')) > 1:
            sentences = data[i]['dialogue'].replace(" |", " ").split('\r\n')
            
        else:
            sentences = data[i]['dialogue'].replace(" |", " ").split('\n')
            
        if len(sentences) == 1:
            continue
            
    
        summaries.append(data[i]['summary'].strip('\n').replace('\r\nt', ' '))

        if len(labels) > 1:
            
            if label_type == '_sent_c99_label'
                temp = ''
                temp += sentences[0]
                for j in range(1, len(sentences)):
                    if labels[i][j] != labels[i][j-1]:

                        temp = temp + sep + sentences[j]
                    else:
                        temp = temp + ' ' + sentences[j]
                temp += ' | '
                conversations.append(temp)
            else:
                temp = ' | '
                temp += sentences[0]
                for j in range(1, len(sentences)):
                    if labels[i][j] != labels[i][j-1]:

                        temp = temp + sep + sentences[j]
                    else:
                        temp = temp + ' ' + sentences[j]
                conversations.append(temp)
                
        elif labels[0] == 1:
            conversations.append(' | ' + ' | '.join(sentences))
        elif labels[0] == 0:
            conversations.append(' | ' + ' '.join(sentences))
        
    return conversations, summaries
    

def transform_format(prefix, label_type = '_sent_c99_label'):
    with open(prefix + '.json', encoding = 'utf8') as json_file:
        data = json.load(json_file)
    if label_type != '_all' and label_type != '_none':
        with open(prefix + label_type +'.pkl', 'rb') as f:
            labels = pickle.load(f)
    elif label_type == '_all':
        labels = [1]
    elif label_type == '_none':
        labels = [0]
        
    cons, sums = concat_conversation(data, labels, label_type)
    
    print(len(cons))
    print(len(sums))
    

    with open(prefix + label_type +'.source', 'wt', encoding='utf-8') as source_file, open(prefix + label_type + '.target', 'wt', encoding='utf-8') as target_file:
        
        for i in range(0, len(cons)):
            article = cons[i]
            abstract = sums[i]
            source_file.write(article + '\n')
            target_file.write(abstract + '\n')

for u in ['train', 'val', 'test']:
    transform_format(u, '_all')
    transform_format(u, '_none')
    transform_format(u, '_sent_trans_cons_label') 
    transform_format(u, '_sent_c99_label')



